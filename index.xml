<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Handnew&#39;s blog</title>
    <link>https://handnew04.github.io/</link>
    <description>Recent content on Handnew&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 12 Jul 2020 00:39:08 +0900</lastBuildDate>
    
        <atom:link href="https://handnew04.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>[Android] 이미지 가져오기 (촬영, 내부저장소, 자르기) </title>
      <link>https://handnew04.github.io/post/android-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0-%EC%B4%AC%EC%98%81-%EB%82%B4%EB%B6%80%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%9E%90%EB%A5%B4%EA%B8%B0/</link>
      <pubDate>Sun, 12 Jul 2020 00:39:08 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/android-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0-%EC%B4%AC%EC%98%81-%EB%82%B4%EB%B6%80%EC%A0%80%EC%9E%A5%EC%86%8C-%EC%9E%90%EB%A5%B4%EA%B8%B0/</guid>
      <description>지정된 비율로 리사이즈 크롭 return-data 를 이용 하여 intent 로 크롭된 이미지가 넘어오도록 함
 @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) { super.onActivityResult(requestCode, resultCode, data); if (resultCode != RESULT_OK) return; switch (requestCode) { case PICK_FROM_ALBUM: Uri photoUri = data.getData(); cropImage(photoUri); break; case PICK_FROM_CAMERA: break; case CROP_FROM_IMAGE: Bundle bundle = data.getExtras(); assert bundle != null; Bitmap test = bundle.getParcelable(&amp;quot;data&amp;quot;); break; } } private void cropImage(Uri imageUri) { Intent intent= getCropIntent(imageUri); startActivityForResult(intent, CROP_FROM_IMAGE); } private Intent getCropIntent(Uri inputUri) { Intent intent = new Intent(&amp;quot;com.</description>
    </item>
    
    
    
    <item>
      <title>[Android] permission</title>
      <link>https://handnew04.github.io/post/android-permission/</link>
      <pubDate>Wed, 25 Dec 2019 22:35:44 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/android-permission/</guid>
      <description>안드로이드 23 이상에서의 권한 요청
매니패스트에 선언한 권한목록을 가져올 수 있다.
String[] 의 형태로 받을 수 있다.
 try { String[] permissionList = context .getPackageManager() .getPackageInfo(context.getPackageName(), PackageManager.GET_PERMISSIONS) .requestedPermissions; } catch (PackageManager.NameNotFoundException e) { //throw new RuntimeException (&amp;quot;Exception&amp;quot;, e); }  권한 목록중 허가되지 않은 권한을 확인하고
public static String[] checkPermissions(Context context, String[] permissionList) { ArrayList&amp;lt;String&amp;gt; requestList = new ArrayList&amp;lt;&amp;gt;(); for (String aPermission : permissionList) { int permissionCheck = ContextCompat.checkSelfPermission(context, aPermission); if (permissionCheck == PackageManager.</description>
    </item>
    
    
    
    <item>
      <title>[Realm] Realm 사용기</title>
      <link>https://handnew04.github.io/post/realm-realm-%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
      <pubDate>Mon, 23 Dec 2019 23:01:36 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/realm-realm-%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
      <description>기존의 SharedPreference + SQLite 로 이루어진 로컬db를 Realm 으로 교체하기 위함  특징  Realm 의 테이블은 java 에서 사용하는 클래스파일로 대체 된다.
public class Sample extends RealmObject { private String vehicleId; private int vehicleName; }  클래스 내부에 필요한 컬럼을 넣을 수 있고 getter &amp;amp; setter 로 일반 클래스처럼(setter 는 트랜잭션 내에서만 가능) 사용할 수 있다.
  사용하기  공식문서
 컬럼마다 업데이트를 하던 기존 데이터베이스와 달리 지정한 PrimaryKey를 비교하여 존재하지 않으면 쓰기를, 존재하면 오브젝트 자체를 업데이트 할 수 있다.</description>
    </item>
    
    
    
    <item>
      <title>[WIL] 7월 4주차</title>
      <link>https://handnew04.github.io/post/wil-7%EC%9B%94-4%EC%A3%BC%EC%B0%A8/</link>
      <pubDate>Tue, 13 Aug 2019 22:10:43 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/wil-7%EC%9B%94-4%EC%A3%BC%EC%B0%A8/</guid>
      <description>SQL safe update mode error  Error Code: 1175. You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column. To disable safe mode, toggle the option in Preferences -&amp;gt; SQL Editor and reconnect. 하나의 레코드만을 update, delete 하도록 설정 된 모드인데 다수의 레코드를 수정하려 할때 에러 발생. 일시적 safe 모드 해제 : set sql_sate_updates=0; 영구적 해제는 워크벤치의 file - preference에서 safe mode 를 해제하면 된다.</description>
    </item>
    
    
    
    <item>
      <title>[JAVA] enum type</title>
      <link>https://handnew04.github.io/post/java-enum-type/</link>
      <pubDate>Tue, 13 Aug 2019 22:05:18 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/java-enum-type/</guid>
      <description>열거 자료형  기존의 java 에서 상수를 사용할 때 아래와 같이 정의한다.
//과일 public static int F_APPLE = 1; public static int F_MANGO = 2; public static int F_MELON = 3; //의류 public static int C_ZARA = 1; public static int C_MANGO = 2; public static int C_SPAO = 3;  위의 코드에서 2와 비교를 할 때 과일과 의류의 MANGO 는 따로 정의 되어 있지만 비교시에 둘 다 2로써 값이 같다고 여기게 된다.</description>
    </item>
    
    
    
    <item>
      <title>[WIL] 7월 3주차</title>
      <link>https://handnew04.github.io/post/wil-7%EC%9B%94-3%EC%A3%BC%EC%B0%A8/</link>
      <pubDate>Mon, 22 Jul 2019 23:06:14 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/wil-7%EC%9B%94-3%EC%A3%BC%EC%B0%A8/</guid>
      <description>Logcat 색상 설정  안드로이드 스튜디오의 Ffile - Setting-Editor-Color Scheme- Android Logcat 에서 톱니바퀴를 눌러 import 를 하거나 나의 색상을 export 하여 테마를 저장할 수 있다.  프로젝트 전체 폰트 적용 방법  앱에서 기본으로 사용할 폰트의 경우 전체 적용이 필요하다 style.xml 에서 해당 앱의 베이스테마에 fontFamily 태그를 추가하여 사용할 폰트를 기입 다만 적용 되지 않는 다이얼로그 존재가 가능하며 그 부분에 대해선 해당 TextView 의 스타일이나 layout의 xml 파일에서 직접 추가 필요 layout에서 theme 으로 수정한 앱테마를 받고있는지를 확인 -&amp;gt; 받는다면 적용됨  review  for문 안에 for 문이 또 들어가는 등.</description>
    </item>
    
    
    
    <item>
      <title>[WIL] 7월 2주차</title>
      <link>https://handnew04.github.io/post/wil-7%EC%9B%94-2%EC%A3%BC%EC%B0%A8/</link>
      <pubDate>Mon, 22 Jul 2019 23:01:20 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/wil-7%EC%9B%94-2%EC%A3%BC%EC%B0%A8/</guid>
      <description>안드로이드 R 에러  file 의 Invalidate Caches / Restart (캐시를 지우는 것)
  windowSoftInputMode  키보드가 필요한 액티비티에 사용. 매니패스트의 액티비티 태그에 android:windowSoftInputMode=&amp;ldquo;&amp;rdquo; 로 사용 &amp;rdquo;&amp;rdquo; 에 adjustPan 등을 입력. 종류가 다양함  안드로이드 해상도 별 크기 대응 참고블로그
 dimens.xml의 해상도 설정은 value폴더를 나뉘는 것으로 생성 values-hdpi, values-xdpi 등 필요한 dpi 별 폴더를 res 폴더 아래에 생성하여 해당 폴더안에 dimens라는 이름으로 xml 파일 생성  안드로이드 해상도 별 크기 대응 2  dimens 로 사용 시 같은 xxhdpi 를 사용하지만 화면의 크기가 다른 경우 발생.</description>
    </item>
    
    
    
    <item>
      <title>[WIL] 7월 1주차</title>
      <link>https://handnew04.github.io/post/wil-7%EC%9B%94-1%EC%A3%BC%EC%B0%A8/</link>
      <pubDate>Mon, 22 Jul 2019 22:38:06 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/wil-7%EC%9B%94-1%EC%A3%BC%EC%B0%A8/</guid>
      <description> WeakReference  핸들러를 이너 클래스로 사용 시 메모리 누수* 발생 가능. 그 상황을 방지 하는 역할
 기존 핸들러 클래스를 static 클래스로 사용
 핸들러 내부에서 해당 액티비티 타입의 WeakReference 변수를 생성하여 사용
  Private final WeakReference&amp;lt;StartActivity&amp;gt; mActivity;  메모리 누수
 AsyncTask 가 제 할일을 마친 후, 사용하던 메모리를 다시 main 에게 돌려 주어야 하는데, 그러지 않는 경우
   AdvertisingIdClient class
 구글의 플레이 서비스를 사용하는 디바이스의 ad ID를 얻을 수 있음 유저 식별용으로 적합  </description>
    </item>
    
    
    
    <item>
      <title>[디자인패턴] Singleton Pattern</title>
      <link>https://handnew04.github.io/post/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4-singleton-pattern/</link>
      <pubDate>Wed, 24 Apr 2019 13:26:32 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4-singleton-pattern/</guid>
      <description>싱글톤 패턴이란 단 하나의 인스턴스만을 사용하는 패턴이다.  예시 스피커의 볼륨을 조절하는 클래스의 인스턴스가 여러개라면 조절 할 때 마다 모든 인스턴스를 조절 해야하는 번거로움이 생긴다.
그래서 하나의 인스턴스를 사용한다.
하나의 인스턴스를 사용하기 위해 static으로 선언한다.
package Singleton; public class SystemSpeaker { static private SystemSpeaker instance; private int volume; private SystemSpeaker() { volume = 5; } public static SystemSpeaker getInstance() { if (instance == null) { //시스템 스피커/ 아직 생성이 되지 않았을때는 생성을 해주고 instance = new SystemSpeaker(); } //instance가 생성되어 있다면 그 인스턴스를 리턴한다.</description>
    </item>
    
    
    
    <item>
      <title>[디자인패턴] Template Method Pattern</title>
      <link>https://handnew04.github.io/post/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4-template-method-pattern/</link>
      <pubDate>Mon, 22 Apr 2019 19:05:14 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4-template-method-pattern/</guid>
      <description>알고리즘의 구조를 메서드에 정의하고 하위 클래스에서 알고리즘의 구조의 변경 없이 알고리즘을 재정의 하는 패턴  구현하려는 알고리즘이 일정한 프로세스가 있다 구현하려는 알고리즘이 변경 가능성이 있다   템플릿 메서드 기본 설계구조 템플릿 메서드 패턴의 구현 단계  요구사항에 대한 알고리즘을 여러 단계로 나눈다 나눠진 알고리즘의 단계를 메서드로 선언한다 알고리즘을 수행할 템플릿 메서드를 만든다 하위 클래스에서 나눠진 메서드들을 구현한다  예제 신작 게임의 접속을 구현해주세요
 requestConnection(String str): String  유저가 게임 접속시 다음을 고려해야 합니다</description>
    </item>
    
    
  </channel>
</rss>
