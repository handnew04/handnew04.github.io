<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Handnew's blog</title><link>https://handnew04.github.io/</link><description>Recent content on Handnew's blog</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Thu, 24 Dec 2020 00:01:58 +0900</lastBuildDate><atom:link href="https://handnew04.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>[Notion] 오늘이 지나면 자동으로 x 체크 되는 함수</title><link>https://handnew04.github.io/posts/2020_12_23_notion_func/</link><pubDate>Thu, 24 Dec 2020 00:01:58 +0900</pubDate><guid>https://handnew04.github.io/posts/2020_12_23_notion_func/</guid><description>노션의 달력에서 매일 할일을 기록하고 오늘이 지났을때 완료 표시가 없으면 자동으로 x를 완료 체크를 하면 체크표시가 나오도록 하고싶었다. 오늘과 이후의 할 일에 대해</description></item><item><title>[Android] MVVM 예제도 다 1:1인데 MVP랑 차이가 뭘까?</title><link>https://handnew04.github.io/posts/2020-11-24/</link><pubDate>Tue, 24 Nov 2020 23:22:03 +0900</pubDate><guid>https://handnew04.github.io/posts/2020-11-24/</guid><description>MVVM을 사용하는 이유? devHyeon님의 특강(?) 통해 알게된 MVVM을 사용하는 이유(MVP와 MVVM의 차이점)에 대한 정리. 직접 작성하신 샘</description></item><item><title>[Notion] 노션 디데이 함수</title><link>https://handnew04.github.io/posts/2020-11-19/</link><pubDate>Fri, 20 Nov 2020 00:55:23 +0900</pubDate><guid>https://handnew04.github.io/posts/2020-11-19/</guid><description>기존 노션에는 디데이 기능이 없다. 칸반보드를 사용하며 계획한 날짜와 며칠이나 남았는지가 보였으면 좋겠다고 생각했다. 다행히 노션에는 Formula라는 함수</description></item><item><title>[Android] SingleActivity 와 Navigation Component</title><link>https://handnew04.github.io/posts/2020-11-15/</link><pubDate>Mon, 16 Nov 2020 03:24:16 +0900</pubDate><guid>https://handnew04.github.io/posts/2020-11-15/</guid><description>사이드프로젝트 개발에 앞서 Single Activity를 사용할 것인가에 대해 고민한다. Single Activity? 싱글 액티비티는 하나의 액태비티를 두고 나머지 화면을 모두 프래그먼트로 구</description></item><item><title>[Android] 스피너 (Spinner)</title><link>https://handnew04.github.io/posts/android_spinner/</link><pubDate>Sun, 26 Jul 2020 17:50:32 +0900</pubDate><guid>https://handnew04.github.io/posts/android_spinner/</guid><description>동적 스피너 ArrayAdapter 의 context 자리에 activity 는 가능하나 fragment에서 사용할 경우 getActivity 를 가져와야 함 private void initSpinner() { List&amp;lt;String&amp;gt; years = getYears(); ArrayAdapter&amp;lt;String&amp;gt; adapter = new ArrayAdapter&amp;lt;&amp;gt;(this, android.R.layout.simple_spinner_dropdown_item, years); adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item); yearsSpinner.setAdapter(mModelYearsAdapter); } private List&amp;lt;String&amp;gt; getYears() { int currentYear = Calendar.getInstance().get(Calendar.YEAR); int minYear = 2000; List&amp;lt;String&amp;gt;</description></item><item><title>[Study] StudyFork 7주 차 기록</title><link>https://handnew04.github.io/posts/studyfork_7_week/</link><pubDate>Wed, 15 Jul 2020 00:35:40 +0900</pubDate><guid>https://handnew04.github.io/posts/studyfork_7_week/</guid><description>DI Dependency Injection 의존을 밖에서 주입해주자. DI PPT 참고 벤다이어그램 연관 관계 참고 (외부에서 변수를 넣는지 내부 생성자에서 인스턴스화 하는지 등, 내부 생성시 객체 고정으로</description></item><item><title>[Study] StudyFork 6주 차 기록</title><link>https://handnew04.github.io/posts/studyfork_6_week/</link><pubDate>Wed, 15 Jul 2020 00:35:28 +0900</pubDate><guid>https://handnew04.github.io/posts/studyfork_6_week/</guid><description>ViewModel https://developer.android.com/topic/libraries/architecture/viewmodel?hl=en ViewModel 은 rotate 시 destory 된 액티비티의 컨텍스트를 계속 가지고 있어서 컨텍스트를 사용할 시 액티비티 컨텍스트가 아닌 Application Context 를 사용 할 것 ViewModelStoreOwner : 내가 만든걸 저장시키고 가지고 옮 Map</description></item><item><title>[Study] StudyFork 5주 차 기록</title><link>https://handnew04.github.io/posts/studyfork_5_week/</link><pubDate>Wed, 15 Jul 2020 00:35:18 +0900</pubDate><guid>https://handnew04.github.io/posts/studyfork_5_week/</guid><description>pagination endlessScrollListener 쓰레쉬 홀더 ? 를 조정 -&amp;gt; 5 면 5개 남았을 때 재로딩 옵저버 패턴 유튜버 -&amp;gt; Youtube -&amp;gt; 구독자들 VM이 옵저버 객체에게 데이터를 바꿔서 넣어주면 옵저버 객체를 보고있던 V</description></item><item><title>[Study] StudyFork 4주 차 기록</title><link>https://handnew04.github.io/posts/studyfork_4_week/</link><pubDate>Wed, 15 Jul 2020 00:30:10 +0900</pubDate><guid>https://handnew04.github.io/posts/studyfork_4_week/</guid><description>https://developer.android.com/topic/libraries/data-binding/generated-binding https://developer.android.com/topic/libraries/data-binding/expressions two way binding 객체와 view 서로 주고 받은 바인딩 @={} : two way @{} : one way 로 구분 예를 들어 EditText 의 내용을 객체로 바로 보내서 바로 TextView 로 보여줄 수 있음 set 은 int 로 get은 string 의 경우에도</description></item><item><title>[Study] StudyFork 3주 차 기록</title><link>https://handnew04.github.io/posts/studyfork_3_week/</link><pubDate>Wed, 15 Jul 2020 00:29:58 +0900</pubDate><guid>https://handnew04.github.io/posts/studyfork_3_week/</guid><description>MVP view 는 항상 in/out 만 할 것 in/out 외 다른 작업들은 모두 presenter 가 처리 presenter 가 M(model) 과 작업 view에는 각각의 함수만 존재 (성공, 아이디없음, 등) presenter 에서 분기를 가지고 해당 분기에 대</description></item></channel></rss>