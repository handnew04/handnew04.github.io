<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on Handnew&#39;s blog</title>
    <link>https://handnew04.github.io/tags/android/</link>
    <description>Recent content in android on Handnew&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 12 Jul 2020 01:22:44 +0900</lastBuildDate>
    
	<atom:link href="https://handnew04.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Android] AWS S3 이미지 업로드</title>
      <link>https://handnew04.github.io/post/android-aws-s3-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EB%A1%9C%EB%93%9C/</link>
      <pubDate>Sun, 12 Jul 2020 01:22:44 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/android-aws-s3-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EB%A1%9C%EB%93%9C/</guid>
      <description>AWS IAM 에서 ACCESS KEY, SECRET KEY 얻기 S3 에서 BUCKET 및 아래 폴더 생성 안드로이드 gradle 추가 매니패스트 서비스 추가 코드 작성   1. AWS IAM 에서 ACCESS KEY, SECRET KEY 얻기 우선 AWS 의 IAM 콘솔 - 사용자에 추가하여 액새스키와 시크릿키를 얻는다.
시크릿키는 만들 때 한번만 보여주기 때문에 잊어버리면 사용자를 다시 추가하여야 한다.
2. S3 에서 BUCKET 및 아래 폴더 생성 버킷을 생성하고 버킷 내부에 파일을 저장할 폴더 생성</description>
    </item>
    
    <item>
      <title>[Android] permission</title>
      <link>https://handnew04.github.io/post/android-permission/</link>
      <pubDate>Wed, 25 Dec 2019 22:35:44 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/android-permission/</guid>
      <description>안드로이드 23 이상에서의 권한 요청
매니패스트에 선언한 권한목록을 가져올 수 있다.
String[] 의 형태로 받을 수 있다.
 try { String[] permissionList = context .getPackageManager() .getPackageInfo(context.getPackageName(), PackageManager.GET_PERMISSIONS) .requestedPermissions; } catch (PackageManager.NameNotFoundException e) { //throw new RuntimeException (&amp;quot;Exception&amp;quot;, e); }  권한 목록중 허가되지 않은 권한을 확인하고
public static String[] checkPermissions(Context context, String[] permissionList) { ArrayList&amp;lt;String&amp;gt; requestList = new ArrayList&amp;lt;&amp;gt;(); for (String aPermission : permissionList) { int permissionCheck = ContextCompat.checkSelfPermission(context, aPermission); if (permissionCheck == PackageManager.</description>
    </item>
    
    <item>
      <title>[Realm] Realm 사용기</title>
      <link>https://handnew04.github.io/post/realm-realm-%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
      <pubDate>Mon, 23 Dec 2019 23:01:36 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/realm-realm-%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
      <description>기존의 SharedPreference + SQLite 로 이루어진 로컬db를 Realm 으로 교체하기 위함  특징  Realm 의 테이블은 java 에서 사용하는 클래스파일로 대체 된다.
public class Sample extends RealmObject { private String vehicleId; private int vehicleName; }  클래스 내부에 필요한 컬럼을 넣을 수 있고 getter &amp;amp; setter 로 일반 클래스처럼(setter 는 트랜잭션 내에서만 가능) 사용할 수 있다.
  사용하기  공식문서
 컬럼마다 업데이트를 하던 기존 데이터베이스와 달리 지정한 PrimaryKey를 비교하여 존재하지 않으면 쓰기를, 존재하면 오브젝트 자체를 업데이트 할 수 있다.</description>
    </item>
    
  </channel>
</rss>