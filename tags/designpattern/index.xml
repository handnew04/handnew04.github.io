<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DesignPattern on Handnew&#39;s blog</title>
    <link>https://handnew04.github.io/tags/designpattern/</link>
    <description>Recent content in DesignPattern on Handnew&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 24 Apr 2019 13:26:32 +0900</lastBuildDate><atom:link href="https://handnew04.github.io/tags/designpattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[디자인패턴] Singleton Pattern</title>
      <link>https://handnew04.github.io/posts/singleton-pattern/</link>
      <pubDate>Wed, 24 Apr 2019 13:26:32 +0900</pubDate>
      
      <guid>https://handnew04.github.io/posts/singleton-pattern/</guid>
      <description>싱글톤 패턴이란 단 하나의 인스턴스만을 사용하는 패턴이다. 예시 스피커의 볼륨을 조절하는 클래스의 인스턴스가 여러개라면 조절 할 때 마다 모든 인스턴스를 조절 해야</description>
    </item>
    
    <item>
      <title>[디자인패턴] Template Method Pattern</title>
      <link>https://handnew04.github.io/posts/template_method_pattern/</link>
      <pubDate>Mon, 22 Apr 2019 19:05:14 +0900</pubDate>
      
      <guid>https://handnew04.github.io/posts/template_method_pattern/</guid>
      <description>알고리즘의 구조를 메서드에 정의하고 하위 클래스에서 알고리즘의 구조의 변경 없이 알고리즘을 재정의 하는 패턴 구현하려는 알고리즘이 일정한 프로세스가 있다 구현하</description>
    </item>
    
    <item>
      <title>[디자인패턴] Adapter Pattern</title>
      <link>https://handnew04.github.io/posts/adapter_pattern/</link>
      <pubDate>Sun, 21 Apr 2019 16:11:26 +0900</pubDate>
      
      <guid>https://handnew04.github.io/posts/adapter_pattern/</guid>
      <description>Adapter란? 기계, 기구 등을 다목적으로 사용하기 위한 부가기구 전기 110v 코드를 220v 로 바꿔주는 것 또한 어댑터 코드에서도 마찬가지로 사용처에 맞게 변환을 해주</description>
    </item>
    
    <item>
      <title>[디자인패턴] Strategy Pattern</title>
      <link>https://handnew04.github.io/posts/strategy_pattern/</link>
      <pubDate>Fri, 19 Apr 2019 19:17:56 +0900</pubDate>
      
      <guid>https://handnew04.github.io/posts/strategy_pattern/</guid>
      <description>인터페이스 델리게이트 스트래티지 패턴 인터페이스 두 객체간의 연결을 해주는 장치 기능에 대한 선언과 구현의 분리 기능을 사용하는 통로 public interface Ainterface { //기능의 선언 public void</description>
    </item>
    
  </channel>
</rss>
