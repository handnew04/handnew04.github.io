<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Realm on Handnew&#39;s blog</title>
    <link>https://handnew04.github.io/tags/realm/</link>
    <description>Recent content in Realm on Handnew&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 23 Dec 2019 23:01:36 +0900</lastBuildDate>
    
	<atom:link href="https://handnew04.github.io/tags/realm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Realm] Realm 사용기</title>
      <link>https://handnew04.github.io/post/realm-realm-%EC%82%AC%EC%9A%A9%EA%B8%B0/</link>
      <pubDate>Mon, 23 Dec 2019 23:01:36 +0900</pubDate>
      
      <guid>https://handnew04.github.io/post/realm-realm-%EC%82%AC%EC%9A%A9%EA%B8%B0/</guid>
      <description>기존의 SharedPreference + SQLite 로 이루어진 로컬db를 Realm 으로 교체하기 위함  특징  Realm 의 테이블은 java 에서 사용하는 클래스파일로 대체 된다.
public class Sample extends RealmObject { private String vehicleId; private int vehicleName; }  클래스 내부에 필요한 컬럼을 넣을 수 있고 getter &amp;amp; setter 로 일반 클래스처럼(setter 는 트랜잭션 내에서만 가능) 사용할 수 있다.
  사용하기  공식문서
 컬럼마다 업데이트를 하던 기존 데이터베이스와 달리 지정한 PrimaryKey를 비교하여 존재하지 않으면 쓰기를, 존재하면 오브젝트 자체를 업데이트 할 수 있다.</description>
    </item>
    
  </channel>
</rss>